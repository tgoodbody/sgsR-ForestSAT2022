---
title: "SGS"
subtitle: "Structurally guided sampling using ALS data"
author: "Tristan RH Goodbody & Nicholas C Coops"
institute: "University of British Columbia"
format:
  revealjs: 
    self-contained: true
    theme: blood
    slide-number: true
    preview-links: auto
    logo: images/logo.png
    footer: <https://tgoodbody.github.io/sgsR/>
    progress: true
---

## About me

-   Post-doc - PhD completed 2019

-   Research focused on DAP + LiDAR + UAS + Forests

-   Fun fact: Canada (kanata) means village in the language of the St. Lawrence Iroquoians.

![](images/aboutme.jpg){fig-align="center" width=70%}


## Project overview {#project-overview}

Structurally guided sampling (SGS)

::: incremental
-   2 years funded project by the Canadian Wood Fibre Center, Canadian Federal Govt.
-   Aim is to produce tools to support and advise on the use of structurally guided sampling in forest environments
-   Development of sgsR was made possible thanks to the financial support of the [Canadian Wood Fibre Centre's Forest Innovation Program](https://www.nrcan.gc.ca/science-and-data/funding-partnerships/funding-opportunities/forest-sector-funding-programs/forest-innovation-program/13137).
:::

## Collaborators {#collaborators}

We are thankful for continued collaboration with academic, private industry, and government institutions to help improve `sgsR`. Special thanks to to:

::: columns
::: {.column width="40%"}
-   Martin Queinnec
-   Joanne White
-   Andrew Hudak
-   Ruben Valbuena
-   Murray Woods
:::

::: {.column width="10%"}
:::

::: {.column width="40%"}
-   Antoine Leboeuf
-   Ian Sinclair
-   Grant McCartney
-   Jean-Francois Prieur
-   Piotr Tompalski
:::
:::

## Airborne laser scanning {.smaller}

::: incremental
-   ALS or Light Detection and Ranging (LiDAR) is a laser ranging system

-   Allows high accuracy measurement of terrain, vegetation height, landscape features

-   Use in forest management has grown rapidly

-   Cover forest management areas (wall-to-wall) to allow enhanced forest inventory approaches
:::

## Wall-to-wall ALS

Acquire ALS accross the forest management area

![](images/ALS_w2w.png){fig-align="center"}

## Point-cloud metrics {auto-animate="true"}

Calculate statistics describing forest structure

![](images/ALS.png){fig-align="center"}

## ALS metric rasters

From point-cloud to raster - now we can think about attribute modelling

![](images/mraster.png){width="80%" fig-align="center"}

## Area-Based-Approach

Follow the ABA modelling framework

![](images/ABA.png){width="40%" fig-align="center"}

::: footnote
<center>

[*White et al. (2013)*](https://pubs.cif-ifc.org/doi/abs/10.5558/tfc2013-132)

</center>
:::

## Where ... and how many?

So we need field samples, but how do we locate them?

![](images/srs.png){fig-align="center"}

## Common sampling questions

::: incremental
-   How many samples do we need?

-   Where / how should we locate our samples?

-   Are our samples *representative*?

-   Implications

    -   <font color='#D52B40'> Cost </font>

    -   <font color='#D52B40'> Time </font>

    -   <font color='#D52B40'> Reliability / efficacy </font>

-   Why not use data driven techniques to sample across the landscape?
:::

## What is SGS? {#what-is-sgs .smaller}

When we say structurally guided sampling we mean:

::: incremental
-   Using ALS structural metrics to create *representative* forest sampling designs

-   Integrate already existing sample surveys to supplement SGS approaches

-   Representatively sample based on structure to capture variability across a landscape
:::

::: {.fragment .fade-up}
<center>

<font color='#D52B40'> *"A stratified sample of ground plots is more efficient, cost effective, and beneficial, regardless of the modelling approach applied (White et al. (2017)."* </font>

</center>
:::

::: {.fragment .fade-up}
::: {layout-ncol="2"}
![90th percentile of height](images/p90.png)

![Stratified random sampling](images/srs.png)
:::
:::

::: footer
:::

## What is SGS?

![](images/sgs.png){fig-align="center"}

::: footnote
<center>

[*Hawbaker et al. (2009)*](https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2008JG000870)

</center>
:::

## Representative? {#representative .smaller}

The word *representative* comes up alot when talking about sampling. Papers like [Kruskal & Mosteller (1979)](https://doi.org/10.2307/1402564) indicate that the definition of *representative* is not as clear as we may believe on a case by case basis.

By *representative*, we mean that samples are a:

::: {.fragment .fade-up}
> <font color='#D52B40'> mirror or miniature of the population. The sample has the same distribution as the population. </font>
:::

::: {.fragment .fade-up}
![](images/sampling.png){fig-align="center" width="50%"}
:::

## Why SGS? {#why-sgs .smaller}

::: incremental
-   Field sampling is an integral part of forest management

    -   <font color='#D52B40'> Samples are drivers of model accuracy </font>

-   Field sampling is expensive

    -   <font color='#D52B40'> We want to locate the *right number* of samples in the *right places* </font>

    -   <font color='#D52B40'> Reduce sampling *intensity* -\> reduce costs </font>

-   ALS data provides a comprehensive structural description of forests

    -   <font color='#D52B40'> Representatively sample within varying structural types / assemblages </font>

-   Sampling is ongoing & necessary

    -   <font color='#D52B40'> We need enhanced methods to support ongoing forest management objectives </font>

    -   <font color='#D52B40'> Enhanced sample routines lead to improved inventory estimates </font>
:::

## Justification for SGS

::: incremental
-   More ALS data is being acquired globally - Leverage structural data to stratify landscapes

-   Use of EFIs growing -- create science based, repeatable methods for operational management

-   Increase precision of estimates without increasing required sample size.

-   Sample placement will continue to be a critical management directive.
:::

## SGS in the literature {#sgs-in-the-literature .smaller}

A [growing number of studies](#sgs-in-the-literature-) have demonstrated that *a-priori* use of ALS metrics to guide sampling design provides methods that are:

::: incremental
-   <font color='#D52B40'> transparent </font>

-   <font color='#D52B40'> repeatable </font>

-   <font color='#D52B40'> tuneable </font>

-   <font color='#D52B40'> & spatially-explicit </font>
:::

. . .

::: incremental
These methods represent the full structural variation of the forest resource and/or augment plot networks to include under-represented, yet managerially or ecologically important structural conditions
:::

## SGS in the literature {#sgs-in-the-literature- .smaller .scrollable}

| **Authors**                                | **Method**                             | **Data / Metric(s)**                                                                          |
|--------------------------------------------|----------------------------------------|-----------------------------------------------------------------------------------------------|
| *(Van aardt et al., 2006)*                 | Stratification                         | CHM height                                                                                    |
| *(Hawbaker et al., 2009)*                  | Stratification                         | Mean and SD                                                                                   |
| *(Maltamo et al., 2011)*                   | Sample Location                        | P90 & ground echoes vs canopy echoes                                                          |
| *(Dalponte et al., 2011)*                  | Sample Location                        | Mean Height                                                                                   |
| *(Grafström, Lundström and Schelin, 2012)* | Sampling algorithm                     | \-                                                                                            |
| *(Mcroberts et al., 2012)*                 | Post-stratification                    | Height and density metrics                                                                    |
| *(Valbuena et al., 2013)*                  | Stratification                         | Gini coefficient & Lorenz asymmetry                                                           |
| *(Junttila et al., 2013)*                  | Sampling Design                        | Principal components of many metrics                                                          |
| *(Gobakken, Korhonen and Næsset, 2013)*    | Stratification                         | P70 and Density                                                                               |
| *(Grafström, Saarela and Ene, 2014)*       | Sampling algorithm                     | \-                                                                                            |
| *(Leiterer et al., 2015)*                  | Forest canopy characterization         | Full waveform - relative-frequency distribution of echoes                                     |
| *(Melville, Stone and Turner, 2015)*       | Stratification and Sample Location     | Height and stocking density. Canopy cover and occupied volume chosen for post stratification. |
| *(Melville and Stone, 2016)*               | Stratification, sampling and modelling | Cover, height, variability                                                                    |
| *(Niemi & vauhkonen, 2016)*                | Stratification                         | Textural CHM metrics                                                                          |
| *(Valbuena et al., 2017)*                  | Stratification                         | Lmoments -- Skewness and CV                                                                   |
| *(Mcroberts et al., 2017)*                 | Stratification & Sampling design       | Height, density, skewness, kurtosis                                                           |
| *(Fedrigo et al., 2018)*                   | Stratification                         | Height, Plant area volume density, Plant area index                                           |
| *(Papa et al., 2020)*                      | Stratification & Sampling design       | Canopy height                                                                                 |
| *(Queinnec, White and Coops, 2021)*        | Stratification                         | Principal components of height, cover, and variability                                        |
| *(Queinnec et al., 2021)*                  | Stratification & Sampling design       | Principal components of height, cover, and variability                                        |

::: footer
:::

## `sgsR` {.smaller}

::: incremental
-   SGS shows a lot of promise for forest inventory and management

-   We are actively developing an R package (`sgsR`) to implement SGS techniques.

-   I'm going to take the time now to outline some of the packages functionality
:::

. . .

::: {.fragment .fade-in}
<center>

<font color='#D52B40'> And ask you to test it :) </font>

</center>
:::

::: {.fragment .fade-in}
![](images/logo.png){width="30%" fig-align="center"}
:::

## Installation {auto-animate="true"}

-   Install sgsR from [Github](https://github.com/tgoodbody/sgsR) with:

``` r
#--- install devtools if needed ---#
install.packages("devtools")
devtools::install_github("https://github.com/tgoodbody/sgsR")
library(sgsR)
```

## Algorithm structure {.smaller}

::: incremental
-   `sgsR` was built using the `terra`, `sf`, & `tidyverse` packages

-   There are 4 primary function verbs that package uses (as of now)

    -   `strat_*` - apply stratification to metrics raster (mraster) and output a stratified raster (sraster)

    -   `sample_*` - allocate samples using srasters produced from strat\_\* functions.

    -   `calculate_*`- calculate sample information or create useful intermediary sampling products.

    -   `extract_*` - extract pixels values from rasters to samples
:::

::: {.fragment .fade-in}
![](images/flow-01.png){fig-align="center"}
:::

::: footnote
::: {.fragment .fade-in}
Some algorithms (e.g. `sample_srs()`, `sample_balanced()`, `sample_systematic()`) use mrasters as inputs - not dependent on stratified inputs for sampling.
:::
:::

<!-- ## Metric rasters (`mrasters`) -->

<!-- :::{.fragment .fade-in} -->

<!-- ``` r -->

<!-- #--- load libraries ---# -->

<!-- library(sgsR) -->

<!-- library(terra) -->

<!-- library(sf) -->

<!-- #--- Load mraster and access files ---# -->

<!-- r <- system.file("extdata", "wall_metrics.tif", package = "sgsR") -->

<!-- #--- load the mraster using the terra package ---# -->

<!-- mraster <- terra::rast(r) -->

<!-- ``` -->

<!-- ::: -->

<!-- :::{.fragment .fade-in} -->

<!-- ![](images/mraster.png){width=70% fig-align="center"} -->

<!-- ::: -->

## Stratification Basics

Currently 5 stratification algorithms. I'll use `strat_kmeans()` in an example

![](images/stratify-01.png){fig-align="center"}

##  {auto-animate="true"}

First we need to load in our mraster

``` r
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)
```

##  {auto-animate="true"}

Then we can run the kmeans stratification

``` {.r code-line-numbers="5-9"}
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mr,
  nStrata = 5
)
```

##  {auto-animate="true"}

There are different parameters we can specify

``` {.r code-line-numbers="8"}
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mr,
  nStrata = 5, # number of desired strata
)
```

##  {auto-animate="true"}

There are different parameters we can specify

``` {.r code-line-numbers="9"}
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mr,
  nStrata = 5, # number of desired strata
  algorithm = "MacQueen", # specify kmeans algorithm
)
```

##  {auto-animate="true"}

There are different parameters we can specify

``` {.r code-line-numbers="10-11"}
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mr,
  nStrata = 5, # number of desired strata
  algorithm = "MacQueen", # specify kmeans algorithm
  plot = TRUE, # specify if output should be plotted
  details = TRUE # specify if kmeans information should be given
)
```

##  {auto-animate="true"}

There are different parameters we can specify

``` {.r code-line-numbers="12-13"}
#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mr <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mr,
  nStrata = 5, # number of desired strata
  algorithm = "MacQueen",  # specify kmeans algorithm
  plot = TRUE, # specify if output should be plotted
  details = TRUE # specify if kmeans information should be given
  filename = tempfile(fileext = ".tif"), #write file to disc
  overwrite = TRUE #overwrite file if it exists
)
```

## Stratification

```{r}
#| echo: false
#| warning: false
#| results: hide

library(sgsR)

#--- Load raster and access files ---#
r <- system.file("extdata", "wall_metrics.tif", package = "sgsR")
mraster <- terra::rast(r)

#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(
  mraster = mraster,
  nStrata = 5, # number of desired strata
  algorithm = "MacQueen", # specify kmeans algorithm
  plot = TRUE
)

```

## Sampling

Now that we have a stratification raster (`sraster`) created, we can use it for stratified sampling.

![](images/sample-01.png){fig-align="center"}

##  {auto-animate="true"}

Just like with the stratification algorithms, each sampling algorithm has specific parameters

``` {.r code-line-numbers="3"}
#--- perform stratified random sampling ---#
sample_strat(
  sraster = kmeans, # kmeans sraster
  nSamp = 200 # number of desired samples
)
```

##  {auto-animate="true"}

Just like with the stratification algorithms, each sampling algorithm has specific parameters

``` {.r code-line-numbers="5-6"}
#--- perform stratified random sampling ---#
sample_strat(
  sraster = kmeans, # kmeans sraster
  nSamp = 200, # number of desired samples
  allocation = "prop", # allocation type (proportional, optimal, equal)
  mindist = 100, # minimum distance requred between samples
)
```

##  {auto-animate="true"}

Just like with the stratification algorithms, each sampling algorithm has specific parameters

``` {.r code-line-numbers="7|8|9"}
#--- perform stratified random sampling ---#
sample_strat(
  sraster = kmeans, # kmeans sraster
  nSamp = 200, # number of desired samples
  allocation = "prop", # allocation type (proportional, optimal, equal)
  mindist = 100, # minimum distance requred between samples
  access = access, # linestring sf object to remove access from sampling
  buff_inner = 100, # inner access buffer (No samples this close to roads)
  buff_outer = 300, # outer outer buffer (No samples further away from roads)
)
```

## Stratified samples

```{r}
#| warning: false
#| echo: false
#| results: hide

#--- perform stratified sampling random sampling ---#
sample_strat(
  sraster = kmeans,
  nSamp = 200,
  plot = TRUE
)
```

## Access limited

```{r}
#| warning: false
#| echo: false
#| results: hide

a <- system.file("extdata", "roads.shp", package = "sgsR")

#--- load the access vector using the sf package ---#
access <- sf::st_read(a)

#--- perform stratified sampling random sampling ---#
samples <- sample_strat(
  sraster = kmeans,
  nSamp = 200,
  plot = TRUE, # minimum distance requred between samples
  access = access, # linestring sf object to remove access from sampling
  mindist = 200,
  buff_inner = 100, # inner access buffer (I dont want samples this close to roads)
  buff_outer = 300, # outer outer buffer (I dont want samples further away from roads)
)

```

## Extracting values

Now that we have some samples, we can extract metrics

![](images/extract-01.png){fig-align="center"}

##  {auto-animate="true"}

```{r}
#| echo: true
#| warning: false

#--- extract metric values to samples ---#
extract_metrics(mraster = mraster,
                existing = samples)
```

## Piping (`%>%`) {auto-animate="true"}

Now here it all is in a single executable code chunk

``` r
#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(mraster = mraster, nStrata = 5)
```

## Piping (`%>%`) {auto-animate="true"}

Now here it all is in a single executable code chunk

``` {.r code-line-numbers="3"}
#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(mraster = mraster, nStrata = 5) %>%
  sample_strat(., nSamp = 200, mindist = 100)
```

## Piping (`%>%`) {auto-animate="true"}

Now here it all is in a single executable code chunk

``` {.r code-line-numbers="4"}
#--- perform stratification using k-means ---#
kmeans <- strat_kmeans(mraster = mraster, nStrata = 5) %>%
  sample_strat(., nSamp = 200, mindist = 100) %>%
  extract_metrics(mraster = mraster, existing = .)
```

::: {.fragment .fade-up}
Piping makes code more concise and allows for a step-by-step process, like stratifying, sampling and extracting flow nicely
:::

## Using the data

Now that we have our samples and associated structural data we can:

::: incremental
-   Compare and analyse various stratification and sampling approaches

-   Evaluate structural complexity (and change) across the landscape

-   Integrate samples into attribute models - improve estimates
:::

## Some data {.smaller}

How does sample size influence sample efficacy? Cumulative frequency analysis

![](images/ecdf.png){fig-align="center"}

## Representativity {.smaller}

Are derived samples representative of the population?

![](images/clhs.png){fig-align="center"}

## Ongoing work in `sgsR`

::: incremental
-   Many forest management areas have plot networks established.

    -   <font color='#D52B40'> But are they representative? </font>

    -   <font color='#D52B40'> Are there under-represented structures? </font>

    -   <font color='#D52B40'> Are there structures with too many plots? </font>

-   Currently working on developing methods to reduce redundancy and improve effectiveness of sampling
:::

## Thanks for listening!

Questions?

::: {layout-ncol="3"}
![](images/logo.png){width="80%"}

![](images/2014%20forestry%20logo%20white.png)

![](images/nrcan.png)
:::

## Thanks for listening!

Thanks for having us! :D

![](images/thanks.png){fig-align="center" width=70%}
