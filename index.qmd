---
title: |
   | My Career Journey &
   | `sgsR` - Structurally Guided Sampling
author: "__Tristan Goodbody, PhD__"
title-slide-attributes:
  data-background-image: images/title_slide.jpg
  data-background-opacity: "0.4"
date: today
format:
  revealjs: 
    self-contained: true
    slide-number: true
    preview-links: auto
    logo: images/logo.png
    footer: <https://tgoodbody.github.io/sgsR/>
    progress: true
    multiplex: true
    width: 1280
    height: 720
    theme: [simple, assets/styles.scss]
    controls: true
    css: [assets/custom.css]
execute:
  echo: true
bibliography: references.bib
---

```{r include=FALSE}
library(sgsR)
library(terra)
library(sf)

r <- system.file("extdata", "mraster.tif", package = "sgsR")
mr <- terra::rast(r)

#--- Load access network from sgsR internal data ---#
a <- system.file("extdata", "access.shp", package = "sgsR")
#--- load the access vector using the sf package ---#
access <- sf::st_read(a)
```

## Overview {background-color="#356734"}

-   About me

-   Brief inventory and sampling overview

-   Discuss using auxiliary variables within sampling frameworks

-   Structurally guided sampling using Airborne Laser Scanning

-   **`sgsR`** overview

-   Programmatic examples of the package

# About You!

![](images/meme.png){fig-align="center"}

::: {.notes}
https://strawpoll.com/PKgle3Gb9Zp
:::

# 🍁 About me {.smaller}

::: columns
::: column
-   Born in Calgary, Alberta

-   Currently in Vancouver, CA

-   Lived in Quito ECU, Kuala Lumpur MYS, Aberdeen SCO

-   Studied Natural Resources Conservation at UBC (2010-2015)

-   Worked as a planning forester in Chetwynd and Williams Lake, BC

-   10 years experience in remote sensing, forest management
:::

::: column
![](images/tristan.png){fig-align="center" width="60%"}
:::
:::

::: {.notes}
https://maps.app.goo.gl/ibA2voXQf6fZKUgf9
:::

# {background-image="images/max.jpg"}

## 🐕 🥑 Hobbies

::: columns
::: {.column width="30%"}
-   Dog Training

-   Photography

-   Languages

-   Travel (... Food!)

-   Running 🤔
:::

::: {.column width="70%"}
![Kyra at Brandywine Meadows](images/kyra.jpg){fig-align="center"}
:::
:::

#  {background-image="images/thetis.jpg"}

#  {background-image="images/hike.jpg"}

# [🧑🏼‍🎓🖥️🛰️Graduate School]{style="float:center;text-align:center;"} {background-color="#356734"}

<!-- # Graduate School (MSc -> PhD)
::: columns
::: {.column width="60%"}
-   Remote Sensing (lidar, DAP, optical)

-   Industry / government operationalization

-   Peer-reviewed publications (h-index: 20)

-   Mentorship (academia, industry, government)

-   International conferences, workshops, collaborations
:::

::: {.column width="40%"}
![](images/pointcloud.jpg){fig-align="center"}
:::
::: -->

## PhD Research

![](images/thesis.jpg){fig-align="center"}

::: {.fragment .fade-up}
<center>🏆 National Best PhD Thesis (Canadian Remote Sensing Society)</center>

<center>🏆 Best PhD Thesis (UBC Faculty of Forestry)</center>
:::

## Chapter 5 - Forest Regeneration

![](images/regen.png){fig-align="center"}

::: {.fragment .fade-up}
<bold>

<center>Does plot placement make sense?</center>

</bold>
:::

# 

![](images/regen.gif){fig-align="center"}

::: {.notes}
https://www.tandfonline.com/doi/abs/10.1080/01431161.2017.1402387
:::

## Post-Doctoral Research {.smaller}

::: columns
::: {.column width="50%"}
-   Spatial statistics & data‑driven sampling optimization routines

-   Domestic \& international collaborations: academia, government, and private industry

-   Open‑source software development

-   Bespoke lidar processing and analys

-   Mentored students, professionals in remote sensing, data analysis, and scientific communication
:::

::: {.column width="50%"}
![](images/paper.jpg){width="80%"}
:::
:::

::: {.notes}
https://academic.oup.com/forestry/article/96/4/411/7026211?login=false
:::

# [👷🛠️🌳Skills and Work Experience]{style="float:center;text-align:center;"} {background-color="#356734"}

## Forest Carbon Due Diligence (Renoster) {background-image="images/forest.jpg" background-opacity="15%"}

-   Ex-ante & ex-post projects (e.g. Climate Action Reserve Mexico, Verra, Cercarbono)
-   Additionality, durability, and co‑benefits for removal/reduction/avoidance projects
-   Sattelite-based dynamic baseline comparisons
-   Methodology red flag reviews

## Technical Communication {background-image="images/forest2.jpg" background-opacity="15%"}

-   Bridging scientific / strategic concepts with practical applications (colleagues & clients)
-   Interfacing teams to high quality, scalable GIS integration
-   Peer-reviewed academic publishing with wide-ranging uptake (\>30 publications)
-   US federal grant writing efforts (USDA \$10M & \$1.9M)

## Mentorship {background-image="images/forest3.jpg" background-opacity="15%"}

-   Supporting implementation of efficient analytical pipelines
-   Tech-transfer (Quarto, processing efficiencies, scientific writing)
-   Onboarded new staff (technical workflows, company frameworks etc.)

## Data Management & Expertise {background-image="images/forest4.jpg" background-opacity="15%"}

-   Lidar, satellite, airborne, drone, field‑measured, GIS data
-   Operationalization - remote sensing to realize forest management efficiencies
-   Designed, implemented, and applied processing workflows for government and industrial partners (e.g. BC lidar)

## Geospatial Analysis & Computing {background-image="images/forest5.jpg" background-opacity="15%"}

-   R and Python automation of remote sensing workflows, analytics and carbon evaluation
-   Open-source software development and package maintenance (`sgsR`, Renoster Python Packages)
-   Analysis -> Insights (Statistical modelling, data compilation & visualization, standardization)

::: {.fragment .fade-up}
::: callout-important
# Words to live by
**"For every hour you spend coding, you will spend 2 hours documenting"** - Jean-Romain Roussell
:::
:::

## Field Work {background-image="images/title_slide.jpg" background-opacity="15%"}

::: columns
::: {.column width="40%"}
-   Forest regeneration assessments
-   Timber cruising
-   Harvest layout
-   Insect/Avian surveys
-   Fire salvage
-   Seasoned bear spray user 🐻
:::

::: {.column width="60%"}
![](images/forest6.jpg){fig-align="center"}
:::
:::

#

![](images/fieldwork.jpg){fig-align="center"}

# Lessons Learned {background-image="images/forest2.jpg" background-opacity="15%"}

::: columns
::: {.column width="50%"}
**Challenges**

-   Huge areas 

-   Inventories out-of-date

-   High-cost, logistics
:::

::: {.column width="50%"}
**Directives**

-   Use best-available forest structure data (e.g. lidar, DAP)

-   Needs to be data-driven, scalable

-   Flexible to varied inventory objectives

:::
:::

# [🌲🎯 Structurally Guided Sampling]{style="float:center;text-align:center;"} {background-color="#356734"}

## Take-away message <i class="fa-brands fa-r-project" style="height:120px;vertical-align:middle;"></i> <img src="images/logo.png" height="120px" style="vertical-align:middle;"/> {.smaller}

-   **`sgsR`** - R-package for *structurally guided sampling* for enhanced forest inventories.

::: info-box
**`sgsR`** stands for **s**tructurally **g**uided **s**ampling implemented in **R**

<ul>

<li><i class="fa-solid fa-bullseye"></i>Stratification and sampling functions to guide *primarily model-based* sampling approaches</li>

<li><i class="fa-solid fa-bullseye"></i>Focus on *management-level inventories*</li>

<li><i class="fa-brands fa-github"></i>[Documentation and vignettes online](https://tgoodbody.github.io/sgsR/)</li>

<li><i class="fa-solid fa-bowl-food"></i>Funded by the **Canadian Wood Fibre Centre, Canadian Forest Service**</li>

<li><i class="fa-solid fa-bowl-food"></i>Operationalized on \>20M ha of forest in Canada (Government, Industry)</li>

</ul>
:::

::: {.notes}
https://tgoodbody.github.io/sgsR/
:::

# [🌲🌳 Forest inventories]{style="float:center;text-align:center;"} {background-color="#356734"}

## 🌲🌳 Forest inventories

**Purpose:** Obtain knowledge about the population (forest area) under investigation and provide estimates of specific target attributes

::: {.fragment .fade-up}
**Needed information:** Defined by the scope & scale of the inventory. Answered by questions like:
:::

::: {.fragment .fade-up}
::: info-box
<ul>

<li><i class="fa-solid fa-bullseye"></i>Who/what is the information for? (e.g. Reporting obligations, baseline assumptions)</li>

<li><i class="fa-brands fa-github"></i>How big of an area are we inventorying? (e.g. National level, operational level (project))</li>

</ul>
:::
:::

::: {.fragment .fade-up}
-   Answers dictate the sampling approaches to fulfill inventory obligations and objectives
:::

# [🚩 Sampling]{style="float:center;text-align:center;"} {background-color="#356734"}

## 🚩 Sampling

<center>***Mensuration is a cornerstone of forest management***</center>

-   Sampling drives accurate forest attribute estimates (e.g. carbon content, forest area, stem volume)

::: info-box
**Challenges**

<ul>

<li><i class="fa-solid fa-bullseye"></i>Labour intensive</li>

<li><i class="fa-brands fa-github"></i>Logistically challenging</li>

<li><i class="fa-brands fa-github"></i>**Expensive!!!**</li>

</ul>

:::


<!-- ::: {.fragment .fade-up}
<center> Need to balance these constraints with attribute estimate accuracy <center>

::: -->

# [🎲📊 Traditional sampling approaches]{style="float:center;text-align:center;"} {background-color="#356734"}

## 🎲 Random sampling

-   Randomized sampling where probabilities for each sample unit can be equivalent and known

```{r}
#| warning: false
#| echo: true
#| results: hide
#| fig-align: center
#--- simple random sampling ---#
sample_srs(raster = mr, nSamp = 100, plot = TRUE)
```

## 🟩 Systematic sampling

-   Systematic sampling methods are also common, where sample units are selected based on a defined distance

```{r}
#| warning: false
#| echo: true
#| results: hide
#| fig-align: center
#--- systematic sampling ---#
sample_systematic(raster = mr, cellsize = 1000, plot = TRUE)
```

## 🟩 Systematic sampling {auto-animate="true"}

-   Different tessellation shapes are common

```{r}
#| warning: false
#| echo: true
#| results: hide
#| fig-align: center
#--- systematic sampling in hexagons ---#
sample_systematic(raster = mr, cellsize = 1000, square = FALSE, plot = TRUE)
```

## 🟩 Systematic random sampling {auto-animate="true"}

-   And combinations of systematic and simple random sampling also exists

```{r}
#| warning: false
#| echo: true
#| results: hide
#| fig-align: center
#--- systematic random sampling ---#
sample_systematic(raster = mr, cellsize = 1000, 
                  square = FALSE, location = "random", plot = TRUE)
```

## 🎲📊 Traditional sampling approaches

These methods are:

::: info-box
-   Time-tested

-   Simple

-   Efficient

-   Broadly used

-   Probabilistic
:::


# [❓ <br> **How can we improve sampling efficiency, estimate accuracy, cost, logistics?** </br> ❓]{style="float:center;text-align:center;"} {background-color="#ddbc76"}

# [🛰👩🏻‍💻 Auxiliary data]{style="float:center;text-align:center;"} {background-color="#356734"}

## 👩🏻‍💻 Remotely Sensed Data

Need empirical distributions that are spatially explicit

::: info-box
<ul>

<li><i class="fa-solid fa-bullseye"></i>Imagery *(satellite, airborne, drone)*</li>

<li><i class="fa-brands fa-github"></i>Feature-based inventories *(species, management type)*</li>

<li><i class="fa-brands fa-github"></i>ALS metrics *(height, cover, variability)*</li>

</ul>

:::

::: {.fragment .fade-up}
✔️ Understand inventory attributes of interest (e.g. carbon density)
:::

::: {.fragment .fade-up}
✔️ Associate auxiliary data correlated to those attributes (e.g. lidar heights & variability)
:::

::: {.fragment .fade-up}
✔️ Sample across the full range of attribute variability
:::

# [💠🔢 Stratification]{style="float:center;text-align:center;"} {background-color="#356734"}

## 💠🔢 Stratification

<center>*"Our results highlight that [LiDAR data integrated with field data sampling designs can provide broad-scale assessments of vegetation structure and biomass]{style="color:red"}, i.e., information crucial for carbon and biodiversity science."* [@hawbaker2009]</center>

![](images/sgs.png){fig-align="center"}

## 💠🔢 Stratification

<center>*"The ALS data also provides an [excellent source of prior information]{style="color:red"} that may be used in the [design phase of the field survey to reduce the size of the field data set."]{style="color:red"}*[@gobakken2013]</center>

![](images/sgs2.png){fig-align="center" width="863"}

## 💠🔢 Stratification - [1]{.circle} metric {auto-animate="true"}

``` r
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mr$zq90, # p90
                           nStrata = 5) # 5 strata in p90
```

## 💠🔢 Stratification - [1]{.circle} metric {auto-animate="true"}

``` {.r code-line-numbers="2"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mr$zq90, # p90
                           nStrata = 5) # 5 strata in p90
```

## 💠🔢 Stratification - [1]{.circle} metric {auto-animate="true"}

``` {.r code-line-numbers="2-3"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mr$zq90, # p90
                           nStrata = 5) # 5 strata in p90
```

::: {.fragment .fade-up}
![](images/strat_1.png){fig-align="center"}
:::

## 💠🔢 Stratification - [2]{.circle} metrics {auto-animate="true"}

``` r
#--- perform dual metric stratification ---#
sraster <- strat_quantiles(mraster = mr[[c(1,3)]], # p90
                           nStrata = list(10,3))
```

## 💠🔢 Stratification - [2]{.circle} metrics {auto-animate="true"}

``` {.r code-line-numbers="2-3"}
#--- perform dual metric stratification ---#
sraster <- strat_quantiles(mraster = mr[[c(1,3)]], # p90 & zsd
                           nStrata = list(10,3))
```

::: {.fragment .fade-up}
![](images/strat_2.png){fig-align="center"}
:::

## 🎯 Structurally guided sampling {.smaller auto-animate="true"}

```{r}
#| echo: true
#| eval: true
#| results: false
#| fig-align: center

#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mr$zq90, # p90
                           nStrata = 10)

#--- structurally guided stratified sampling ---#
sample_strat(sraster = sraster, nSamp = 100, mindist = 200, plot = TRUE)
```

# [`sgsR`]{style="float:center;text-align:center;"} {background-color="#356734"}

![](images/logo.png){fig-align="center"}

## `sgsR` purpose <img src="images/logo.png" height="120px" style="vertical-align:middle;"/> {.smaller}

**`sgsR`** is a toolbox to provide primarily *model-based* sampling approaches for *management-level* forest inventories that are:

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i>Transparent</li>

<li><i class="fa-brands fa-github"></i>Repeatable</li>

<li><i class="fa-solid fa-bullseye"></i>Tuneable</li>

<li><i class="fa-solid fa-bullseye"></i>Spatially explicit</li>

<li><i class="fa-solid fa-bullseye"></i>Scalable</li>

</ul>
:::

## Algorithm structure <i class="fa-brands fa-r-project" style="height:120px;vertical-align:middle;"></i> <img src="images/logo.png" height="120px" style="vertical-align:middle;"/> {.smaller}

-   **`sgsR`** was built using the `terra`, `sf`, & `tidyverse` packages

-   There are 4 primary function verbs that **`sgsR`** uses:

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i>`strat_*` - apply stratification to metrics raster (mraster) and output a stratified raster (sraster)</li>

<li><i class="fa-brands fa-github"></i>`sample_*` - allocate samples using srasters produced from strat\_\* functions</li>

<li><i class="fa-solid fa-bullseye"></i>`calculate_*`- calculate sample information or create useful intermediary sampling products</li>

<li><i class="fa-solid fa-bullseye"></i>`extract_*` - extract pixels values from rasters to samples</li>

</ul>
:::

![](images/flow-01.png){fig-align="center" width="655"}

##  {background-color="#356734"}

![](images/flow.png){fig-align="center"}

# [Example]{.story} 🌱 [Stratified sampling constrained by access]{style="float:right;text-align:right;"} {background-color="#356734"}

## [Example]{.story} 🌱 Stratified sampling constrained by access

-   Imagine you are a project developer who wants to accurately estimate their carbon stocks

::: incremental
-   You need to establish a field inventory, but want to balance cost with estimation precision

-   You want to maximize sample unit count (number of plots) by sampling around access corridors (roads)

-   You know someone who can leverage remote sensing data (... its me!)
:::

## [Example]{.story} 🌱 Stratified sampling constrained by access

1️⃣ Read in some ALS metrics

``` {.r code-line-numbers="1,3,5,6"}
#--- Stratification ---#
#--- Load ALS metrics from sgsR internal data ---#
r <- system.file("extdata", "mraster.tif", package = "sgsR")

#--- Read ALS metrics using the terra package ---#
mraster <- terra::rast(r)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access

1️⃣ Read in some ALS metrics

``` {.r code-line-numbers="6"}
#--- Stratification ---#
#--- Load ALS metrics from sgsR internal data ---#
r <- system.file("extdata", "mraster.tif", package = "sgsR")

#--- Read ALS metrics using the terra package ---#
mraster <- terra::rast(r)
```

```{r}
#| warning: false
#| echo: false
#| results: hide
#| fig-align: center
terra::plot(mr$zq90, main = "p90")
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

2️⃣ Read in a linear road `access` network

``` {.r code-line-numbers="4-5"}
#--- Load access network from sgsR internal data ---#
a <- system.file("extdata", "access.shp", package = "sgsR")

#--- load the access vector using the sf package ---#
access <- sf::st_read(a)
```

```{r}
#| warning: false
#| echo: false
#| results: hide
#| fig-align: center
terra::plot(mr$zq90, main = "p90 with road access")
plot(access, add = TRUE, col = "black")
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

3️⃣ Stratify `p90` in to 4 strata based on quantiles

``` r
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)
```

```{r}
#| warning: false
#| echo: false
#| results: hide
#| fig-align: center
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mr$zq90, # input ALS metric - p90
                           nStrata = 4, plot = TRUE) # desired number of strata (4)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

4️⃣ Now lets use the `sraster` output

``` {.r code-line-numbers="6"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100, 
                        allocation = "proportional", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

5️⃣ Request 100 samples

``` {.r code-line-numbers="6-7"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100, 
                        allocation = "prop", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

6️⃣ Sample proportional to stratum size

``` {.r code-line-numbers="6-8"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100,
                        allocation = "prop", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

7️⃣ Bring in the `access` road

``` {.r code-line-numbers="6-9"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100,
                        allocation = "prop", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

8️⃣ Specify we don't want samples within 50 m of `access`

``` {.r code-line-numbers="6-10"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100, 
                        allocation = "prop", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {auto-animate="true"}

9️⃣ Or further than 400 m from `access`

``` {.r code-line-numbers="6-11"}
#--- perform stratification ---#
sraster <- strat_quantiles(mraster = mraster$zq90, # input ALS metric - p90
                           nStrata = 4) # desired number of strata (4)

#--- perform sampling ---#
samples <- sample_strat(sraster = sraster, 
                        nSamp = 100, 
                        allocation = "prop", # equal, manual, optimal
                        access = access, 
                        buff_inner = 50, 
                        buff_outer = 400)
```

## [Example]{.story} 🌱 Stratified sampling constrained by access {.smaller}

![](images/example1.png){fig-align="center"}

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i>Mapped result **(A)** and plotted result **(B)**</li>

<li><i class="fa-brands fa-github"></i>Note buffered `access` in **A**. Points are samples in both **A** & **B**</li>

</ul>
:::

## [Example]{.story} 🌱 Comparing distributions

![](images/accesscompare.png){fig-align="center"}

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i> Cumulative frequency distributions</li>

<li><i class="fa-brands fa-github"></i>`access` constrained vs full extent for *p90* **(A)** and *zsd* **(B)**</li>

</ul>
:::

<!-- # [Example 2]{.story} 🌿 [Augmenting an `existing` sample]{style="float:right;text-align:right;"} {background-color="#356734"}

## 🌿 Augmenting an `existing` sample {background-color="#356734"}

<center>*"I have an existing sample network, can I use those same sample locations?"* <br></br> *"If I go and visit those same sample units, where should I locate new samples for structural representation?"*</center>

![](images/density.png){fig-align="center"}

## [Example 2]{.story} 🌿 Augmenting an `existing` sample {.smaller}

-   Lets create an `existing` sample of 50 plots using simple random sampling (**`sample_srs`**)

-   We are assuming these have been measured or used previously and can be revisited

```{r}
#| warning: false
#| echo: true
#| results: hide
#| fig-align: center
set.seed(2022)
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)
```

## [Example 2]{.story} 🌿 Augmenting an `existing` sample {.smaller}

*Adapted Hypercube Evaluation of a Legacy Sample (AHELS)* [@malone2019]

::: info-box
**`sample_ahels()`** works by:

<ul>

<li><i class="fa-brands fa-github"></i>Determine representation of `existing` sample</li>

<li><i class="fa-brands fa-github"></i>Generate quantile and covariance matrices of ALS metrics</li>

<li><i class="fa-brands fa-github"></i>Determine number of additional samples that can / need to be added</li>

<li><i class="fa-brands fa-github"></i>Identify where new samples are needed to balance quantile density and sampling density</li>

<li><i class="fa-brands fa-github"></i>Iteratively locate samples</li>

</ul>
:::

## [Example 2]{.story} 🌿 Augmenting an `existing` sample

1️⃣ We have our `existing` sample

``` {.r code-line-numbers="1-2"}
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)
```

```{r}
#| warning: false
#| echo: false
#| results: hide
#| fig-align: center
set.seed(2022)
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)
```

## [Example 2]{.story} 🌿 Augmenting an `existing` sample

2️⃣ Now we can use the `sample_ahels()` algorithm with our ALS metrics

``` {.r code-line-numbers="5-6"}
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)

#--- augment sample network using sample_ahels ---#
#--- perform ahels sampling ---#
sample_ahels(mraster = mr,
             existing = existing,
             nSamp = 50)
```

## [Example 2]{.story} 🌿 Augmenting an `existing` sample

3️⃣ Specify our `existing` sample

``` {.r code-line-numbers="5-7"}
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)

#--- augment sample network using sample_ahels ---#
#--- perform ahels sampling ---#
sample_ahels(mraster = mr,
             existing = existing,
             nSamp = 50)
```

## [Example 2]{.story} 🌿 Augmenting an `existing` sample

4️⃣ And specify we want 50 new sample units (`nSamp`)

``` {.r code-line-numbers="5-8"}
#--- simple random sampling ---#
existing <- sample_srs(raster = mr, nSamp = 50, plot = TRUE)

#--- augment sample network using sample_ahels ---#
#--- perform ahels sampling ---#
sample_ahels(mraster = mr,
             existing = existing,
             nSamp = 50)
```

## [Example 2]{.story} 🌿 Augmenting an `existing` sample

![](images/e2s.png){fig-align="center"}

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i>Mapped result **(A)** and plotted result **(B)**</li>

<li><i class="fa-brands fa-github"></i>Note ratios (black/red) and additional added samples *(e.g. [n = 2]{style="color:red"}*)</li>

</ul>
:::

## `sample_ahels()` result

![](images/hist.png){fig-align="center"}

::: info-box
<ul>

<li><i class="fa-brands fa-github"></i>`existing` only **(A)** and addition of new samples **(B)**</li>

<li><i class="fa-brands fa-github"></i>We see that metric and sample density become quite even - structurally representative</li>

</ul>
::: -->

## Summary <img src="images/logo.png" height="120px" style="vertical-align:middle;"/>

Structurally guided sampling methods show promise for:

-   Enhancing efficiency

-   Reducing financial and logistical constraints

-   Leveraging RS data *a-priori*

-   Data-driven, objective, structurally driven inventories

::: callout-tip
# Use Cases

Many more simple (and complex) examples of how `sgsR` can be used. I'm keen to hear if this software could benefit you!
:::


# 🤲🤝🙏 Collaborators

<center>***🐤 [\@GoodbodyT](https://twitter.com/GoodbodyT) 🐤 [\@IRSS_UBC](https://twitter.com/IRSS_UBC)***</center>

<center>

::: info-box
***Special thanks to my `sgsR` collaborators***

::: columns
::: {.column width="30%"}
-   Martin Queinnec
-   Joanne White
-   Andrew Hudak
-   Ruben Valbuena
-   Murray Woods
-   David Auty
:::

::: {.column width="10%"}
:::

::: {.column width="30%"}
-   Antoine Leboeuf
-   Ian Sinclair
-   Grant McCartney
-   Jean-Francois Prieur
-   Piotr Tompalski
:::
:::
:::

</center>

# 😊🏁 Final Thoughts {background-image="images/forest2.jpg" background-opacity="15%"}

::: columns
::: column
**What you can expect from me:**

1. Professional
2. Pro-active
3. Light-hearted; fun to work with
4. Eager to learn & grow
5. High-quality outputs at pace
:::

::: column
**What I'm looking for:**

1. Collaboration
2. Professional development & mentorship
3. Effective communication
4. Inclusive (and fun!) atmosphere
5. Mission / strategically oriented
:::
:::

# [🤲🤝🙏 Thank you!]{style="float:center;text-align:center;"} {background-color="#356734"}

<center> I welcome and encourage any questions! </center>

![](images/affiliations.png){fig-align="center"}

<center>Special thanks to the *Canadian Wood Fibre Centre* for funding `sgsR` research!</center>

## Additional resources

This presentation was made with [Quarto](https://quarto.org/)

![](images/logo.png){fig-align="center" width="182"}
